@import "variables";

.menu {
  position: fixed;
  bottom: 0;
  left: 0;
  right: 0;
}

.menu__cover {
  @extend .menu;
  height: 3rem;
  background: $color-A;
}

.menu__cards {
  @extend .menu;
  display: flex;
  height: 20rem;
  padding: 0 10%;
  justify-content: center; 
}

@mixin card-color($index, $color){
  &:nth-child(#{$index}){
    .card__face{
      background: $color;
    }
  }
}

.card {
  position: relative;
  display: block;
  height: 25rem;
  width: 20rem;
  margin: 0 -2.5rem;
  cursor: pointer;

  // @include card-color(1, $color-B);
  // @include card-color(2, $color-C);
  // @include card-color(3, $color-D);
  // @include card-color(4, $color-E);
  //a { @include link-color(white); }
}

.card__face {
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  top: 0;
  background: #eee;
  color: white;
  transition: transform 0.3s ease-in-out;
  border-radius: 0.5rem;
  overflow: hidden;
  box-shadow: 0 1px 2px rgba($color-A, 0.4);
}

.card__label {
  padding: 1rem;
  font-weight: bold;
}

// Modified from original by Jack Rugile
// ref: https://codepen.io/jackrugile/pres/WZGeGM
$total: 4;
@for $i from 0 through ($total - 1) {

  $rotationRange: 20;
  $rotation: ($i - ($total - 1) / 2) / ($total - 2) * $rotationRange;
  $offsetRange: 30;
  $offset: abs(($i - ($total - 1) / 2) / ($total - 2) * $offsetRange);

  .card:nth-child(#{$i + 1}) {
    .card__face {
      transform: translateY($offset * 1px) rotate($rotation * 1deg);
    }

    &:hover,
    &:focus {
      .card__face{
        transform: translateY(-100px) rotate(0deg) scale(1.7);
        z-index: 5;
        transition-duration: 0.1s;
      }
    }
  }
}
